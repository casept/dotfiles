#!/usr/bin/env bash

# -*- mode: bash -*-
# vi: set ft=bash :

set -eo pipefail

function help() {
	echo "Usage: colorscheme [light|dark|toggle|get]"
	exit 1
}

function light_alacritty() {
	rm -f ~/.config/alacritty/colorscheme.yml
	ln -s ~/.config/alacritty/gruvbox_light.yaml ~/.config/alacritty/colorscheme.yml
	# Forces a refresh
	touch ~/.config/alacritty/alacritty.yml
}

function dark_alacritty() {
	rm -f ~/.config/alacritty/colorscheme.yml
	ln -s ~/.config/alacritty/gruvbox_dark.yaml ~/.config/alacritty/colorscheme.yml
	# Forces a refresh
	touch ~/.config/alacritty/alacritty.yml
}

function light_helix() {
	sed -i 's/theme = ".*"/theme = "gruvbox_light"/' ${HOME}/.config/helix/config.toml
	# Force config reload
	pkill -USR1 hx
	pkill -USR1 helix
}

function dark_helix() {
	sed -i 's/theme = ".*"/theme = "gruvbox_dark_hard"/' ${HOME}/.config/helix/config.toml
	# Force config reload
	pkill -USR1 hx
	pkill -USR1 helix
}


function light() {
	echo "light" > ~/.colorrc
	light_alacritty
	light_helix
}

function dark() {
	echo "dark" > ~/.colorrc
	dark_alacritty
	dark_helix
}

function toggle() {
	local scheme
	if test -f "$HOME/.colorrc"; then
		scheme=$(cat ~/.colorrc)
	else
		# Default to dark
		scheme="dark"
	fi

	if [ "$scheme" == "dark" ]; then
		light
	else
		dark
	fi
}

function get() {
	local scheme
	if test -f "$HOME/.colorrc"; then
		scheme=$(cat ~/.colorrc)
	else
		# Default to dark
		scheme="dark"
	fi

	# All caps because it looks better in waybar
	echo "${scheme^^}"
}

if [ -z "$1" ]; then
	help
fi

if [ "$1" == "light" ]; then
	light
	exit 0
fi

if [ "$1" == "dark" ]; then
	dark
	exit 0
fi

if [ "$1" == "toggle" ]; then
	toggle
	exit 0
fi

if [ "$1" == "get" ]; then
	get
	exit 0
fi

help
